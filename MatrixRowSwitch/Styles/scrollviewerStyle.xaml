<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:APManagerMain.Styles">
    <!-- Simple ScrollViewer 
    ScrollViewer is a Grid control which has a ContentPresenter and a Horizontal and Vertical ScrollBar 
    It is used by ListBox, MenuItem, ComboBox, and TreeView -->
    <Style x:Key="ScrollViewerGeneral" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Content="{TemplateBinding Content}" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                        <!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                   Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" 
                                   Style="{DynamicResource SimpleScrollBar}" Orientation="Horizontal" 
                                   Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}" 
                                   Minimum="0" 
                                   Maximum="{TemplateBinding ScrollableWidth}"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                   Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" 
                                   Style="{DynamicResource SimpleScrollBar}" Orientation="Vertical" 
                                   Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportHeight}" 
                                   Minimum="0" 
                                   Maximum="{TemplateBinding ScrollableHeight}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Simple ScrollBar  This makes use of SimpleThumb, SimpleRepeatButton and SimpleScrollRepeatButton -->
    <Style x:Key="SimpleScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                          Width="6"
                          Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="0.01"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition MaxHeight="0"/>
                        </Grid.RowDefinitions>
                        <Rectangle Fill="Transparent" Grid.RowSpan="3" Grid.Column="0"
                                   RadiusX="5"
                                   RadiusY="5"/>
                        <RepeatButton x:Name="DecreaseRepeat" 
                                      Style="{DynamicResource SimpleRepeatButton}" 
                                      Command="ScrollBar.LineUpCommand"/>
                        <!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource SimpleThumbStyle}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" 
                                              Style="{DynamicResource SimpleScrollRepeatButtonStyle}" 
                                              Command="ScrollBar.PageDownCommand"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" 
                                              Style="{DynamicResource SimpleScrollRepeatButtonStyle}" 
                                              Command="ScrollBar.PageUpCommand"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" 
                                      Style="{DynamicResource SimpleRepeatButton}" 
                                      Command="ScrollBar.LineDownCommand"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Simple Thumb - The Thumb is the draggable part of the Scrollbar -->
    <Style x:Key="SimpleThumbStyle" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch"
                                   x:Name="Rectangle"
                                   VerticalAlignment="Stretch"
                                   Width="6"
                                   Height="Auto"
                                   RadiusX="5"
                                   RadiusY="5"
                                   Fill="#FFFFFF"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Rectangle" Property="Fill" Value="#FFFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"/>
                        <Trigger Property="IsDragging" Value="True"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Simple ScrollRepeatButton Style - This RepeatButton is used above and below the Thumb in the Scrollbar. They are set to transparent si that they do not show over the scrollbar -->
    <Style x:Key="SimpleScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="Transparent"
                                   RadiusX="5"
                                   RadiusY="5"
                                   Width="6"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>